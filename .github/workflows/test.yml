name: Run algorithm

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Compile source files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Compile executable
        run: scripts/build.sh

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: executable
          path: build/*.exe

  solve:
    name: Run algorithm
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        data: ["Hanoi", "Thanh Tri, Hanoi"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download executable
        uses: actions/download-artifact@v4
        with:
          name: executable
          path: build/

      - name: Update executable permission
        run: chmod +x build/*.exe

      - name: Run algorithm
        run: |
          exitcode=0
          set +e

          report_error() {
            this_exitcode=$?

            if [ $this_exitcode -ne 0 ]
            then
              echo "::warning::Exit code $this_exitcode at run #$i"
              exitcode=1
            fi
          }

          for i in $(seq 1 10)
          do
            echo "RUN #$i"
            python scripts/benchmark.py "samples/${{ matrix.data }}.txt" > input.txt
            report_error

            cat input.txt | time -p build/a_star.exe
            report_error

            cat input.txt | time -p build/bfs.exe
            report_error

          done
